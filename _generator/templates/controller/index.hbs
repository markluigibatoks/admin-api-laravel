<?php

namespace App\Http\Controllers;

use App\Http\Resources\\{{pascalCase name}}Collection;
use App\Http\Resources\\{{pascalCase name}}Resource;
use App\Models\\{{pascalCase name}};
use Illuminate\Http\Request;
use Spatie\QueryBuilder\QueryBuilder;
use Illuminate\Support\Facades\Schema;

class {{pascalCase name}}Controller extends Controller
{

    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        ${{camelCase name}} = QueryBuilder::for({{pascalCase name}}::class)
            ->defaultSort('-created_at')
            ->allowedFilters(Schema::getColumnListing('{{pluralSnakeCase name}}'))
            ->allowedSorts(Schema::getColumnListing('{{pluralSnakeCase name}}'))
            ->paginate();
        return new {{pascalCase name}}Collection(${{camelCase name}});
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        $validated = $request->validated();

        return new {{pascalCase name}}Resource($validated);
    }

    /**
     * Display the specified resource.
     */
    public function show({{pascalCase name}} ${{camelCase name}})
    {
        return new {{pascalCase name}}Resource(${{camelCase name}});
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, {{pascalCase name}} ${{camelCase name}})
    {
        $validated = $request->validated();
  
        return new {{pascalCase name}}Resource($validated);
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{pascalCase name}} ${{camelCase name}})
    {
        ${{camelCase name}}->delete();

        return response()->noContent();
    }
}
